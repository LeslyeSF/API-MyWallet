


server.post("/register", async (req,res)=>{
  const user = req.body;
  const validation = userSchema.validate(user, { abortEarly: true });

  if (validation.error) {
    console.log(validation.error.details);
    res.sendStatus(422);
  }

  try{
    const userVerify = await db.collection("Users").findOne({email: user.email});
    if(userVerify){
      res.status(409).send("JÃ¡ existe uma conta com este email!");
    }

    console.log(userverify);
  } catch(err){
    res.status(500).send(err);
  }
  //validacao dos dados com joi           V
  //verificar se o email ja esta em uso   V
  //criptografar a senha                  
  //salvar no banco o cadastro colecao USERS
  //responder com 201
  res.send(user);
});
server.post("/login", async(req,res)=>{
  //recebe email e senha 
  //validar os dados com joi
  //buscar no sistema o email
  //verificar se a senha e compativel
  //criar o token
  //salvar o token+iduser em outra colecao SESSIONS
  //responder com status 200 e o token
});
server.get("/dates", async(req,res)=>{
  //receber token
  //verificar se existe alguma sessao com esse token
  //enviar dados do user correspondente e status 200
});
server.post("/registration", async(req,res)=>{
  //receber token, valor, descricao, status
  //verificar se token existe 
  //validar os dados recebidos
  //buscar os dados do usuario
  //gerar um id para o registro
  //gerar uma data
  //salvar o registro
  //mandar para o cliente 201
});
server.delete("/deleteregister", async(req,res)=>{
  //receber token e id do registro
  //verificar se token existe 
  //buscar usuario
  //buscar registro
  //verificar se existe
  //deletar registro
  //responder com 200
});
server.delete("/endsession", async(req,res)=>{
  //receber o token
  //verificar se token existe
  //delete token
  //responde com 200
});
server.put("/editregister", async(req,res)=>{
  //receber o token, id do registro, valor, descricao e status
  //verificar se o token existe
  //validar os dados recebidos
  //busca o usuaro
  //busca o registro
  //atualiza os dados do registro
  //responde com status 200
});
